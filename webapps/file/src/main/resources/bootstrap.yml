server:
  port: 8088

spring:
  profiles:
    active: @profileActive@
  application:
    name: portal-@project.artifactId@

  cloud:
    nacos:
      discovery:
        username: nacos
        password: portal

  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 200MB

  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    platform: mysql
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 10
      max-wait: 60000
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validationQuery: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      filters: wall,stat
      pool-prepared-statements: true
      connection-properties: druid.stat.slowSqlMillis=1000;druid.stat.logSlowSql=true;config.decrypt=true
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico
        session-stat-enable: true
        session-stat-max-count: 10
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: true
        login-username: admin
        login-password: 123
        allow:

  redis:
    database: 8
    timeout: 5000

  cache:
    type: redis
    redis:
      cache-null-values: true
      time-to-live: 30m

mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  type-handlers-package: com.xzixi.framework.webapps.common.typehandler
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
  global-config:
    db-config:
      id-type: auto
      table-underline: true
      table-prefix: t_
      capital-mode: true
      logic-delete-value: 1
      logic-not-delete-value: 0
      update-strategy: ignored

logging:
  config: classpath:logback-spring.xml

# sftp配置
sftp-client:
  # 连接池配置
  pool:
    # 对象最大数量
    max-total: 20
    # 最大空闲对象数量
    max-idle: 10
    # 最小空闲对象数量
    min-idle: 5
    # 表示使用FIFO获取对象
    lifo: true
    # 不使用lock的公平锁
    fairness: false
    # 获取一个对象的最大等待时间
    max-wait-millis: 5000
    # 对象最小的空闲时间
    min-evictable-idle-time-millis: -1
    # 驱逐线程的超时时间
    evictor-shutdown-timeout-millis: 10000
    # 对象最小的空间时间，保留最小空闲数量
    soft-min-evictable-idle-time-millis: 1800000
    # 检测空闲对象线程每次检测的空闲对象的数量
    num-tests-per-eviction-run: 3
    # 在创建对象时检测对象是否有效
    test-on-create: false
    # 在从对象池获取对象时是否检测对象有效
    test-on-borrow: true
    # 在向对象池中归还对象时是否检测对象有效
    test-on-return: false
    # 在检测空闲对象线程检测到对象不需要移除时，是否检测对象的有效性
    test-while-idle: true
    # 空闲对象检测线程的执行周期
    time-between-eviction-runs-millis: 600000
    # 当对象池没有空闲对象时，新的获取对象的请求是否阻塞
    block-when-exhausted: true
    # 是否注册JMX
    jmx-enabled: false
    # JMX前缀，当jmxEnabled为true时有效
    jmx-name-prefix: pool
    # 使用jmxNameBase + jmxNamePrefix + i来生成ObjectName，当jmxEnabled为true时有效
    jmx-name-base: sftp
  # 废弃对象跟踪配置
  abandoned:
    # 从对象池中获取对象的时候进行清理
    remove-abandoned-on-borrow: true
    # 池维护（evicor）是否执行放弃的对象删除
    remove-abandoned-on-maintenance: true
    # 对象被获取后多长时间没有返回给对象池，则放弃对象
    remove-abandoned-timeout: 300
    # 是否记录放弃对象的应用程序代码的堆栈跟踪
    log-abandoned: false
    # 是否记录完整堆栈信息，当logAbandoned为true时有效
    require-full-stack-trace: false
    # 如果池实现了org.apache.commons.pool2.UsageTracking接口，是否记录完整堆栈信息用来辅助调试废弃对象，当logAbandoned为true时有效
    use-usage-tracking: false

swagger2:
  project-name: ${spring.application.name}
  project-version: @project.version@

log:
  root-level: INFO
  max-size: 1024MB
  max-history: 30
  charset: UTF-8
